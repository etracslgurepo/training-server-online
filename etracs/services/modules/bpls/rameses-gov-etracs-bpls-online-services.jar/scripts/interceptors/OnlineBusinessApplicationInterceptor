import com.rameses.annotations.*;

class OnlineBusinessApplicationInterceptor {

	@DataContext('online_business_application')
	def online_app;

	@Service( dynamic=true )
	def dynaSvc;


	@After(pattern="PersistenceService.read", eval="#{ args[0]._schemaname == 'online_business_application' }")
	public void afterRead( evt ) { 
		resolveData( evt ); 
	} 

	@After(pattern="PersistenceService.read", eval="#{ args[0]._schemaname == 'vw_online_business_application' }")
	public void afterReadVW( evt ) { 
		def res = evt.result;

		// load data from the actual table 
		def app = online_app.find([ objid: res.objid.toString() ]).first(); 
		if ( app ) res.putAll( app ); 

		resolveData( evt ); 
	} 

	void resolveData( evt ) {
		def res = evt.result;

		if ( res.datainfo instanceof Map ) {
			if ( !res.orgtype ) { 
				res.orgtype = res.datainfo.orgtypeid; 
			} 

			res.taxpayerid = res.datainfo.taxpayerid; 
		}

		if ( !res.permittype ) res.permittype = 'BUSINESS'; 

		def dec_formatter = new java.text.DecimalFormat('#,##0.00'); 
		def int_formatter = new java.text.DecimalFormat('#,##0'); 

		res.infos.each{ o-> 
			o.displayValue = o.value;
			if ( !o.value ) return; 

			def datatype = o.datatype.toString().toLowerCase();
			if ( datatype == 'decimal' && o.value ) {
				o.displayValue = dec_formatter.format( o.value ); 
			}
			else if ( datatype == 'integer' && o.value ) {
				o.displayValue = int_formatter.format( o.value ); 
			}
			else if ( datatype == 'boolean' && o.value ) {
				o.displayValue = (o.value.toString().matches('true|1') ? 'yes' : 'no');
			}
		}

		res.infos.sort{ it.caption }

		def lob_ids = res.lobs.collect{ it.lob.objid }.findAll{( it )}
		if ( lob_ids ) {
			def queryParam = [_schemaname: 'lob']; 
			queryParam.where = "objid IN ('"+ lob_ids.join("','") +"')";
			
			def querySvc = dynaSvc.lookup('QueryService'); 
			querySvc.getList( queryParam ).each{ o-> 
				res.lobs.findAll{( it.lob.objid == o.objid )}.each{
					it.lob.psic = o.psic; 
				}
			}
		}

		if ( res.apptype == 'NEW' && res.state == 'OPEN' ) {
			def svc = dynaSvc.lookup('bpls/OnlineAppNewService'); 
			if ( res.business == null ) res.business = [:]; 
			
			res.business.owner = svc.buildOwner( res ); 

			if ( res.taxpayerid ) {
				def filter = [ objid: res.taxpayerid ]; 
				filter._schemaname = 'entity'+ res.business.owner.type.toLowerCase(); 

				svc = dynaSvc.lookup('PersistenceService'); 
				res.taxpayer = svc.read( filter );  
			}
		}
	} 
}
